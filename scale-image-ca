#!/bin/bash
# Licensed under the GNU General Public License Version 2
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
####################################################################################################
## Authored by Anthony Nordquist of the SalineOS project. http://www.salineos.com/  salinelinux@gmail.com 
## Copyright 2011,2012 Anthony Nordquist


## Load translations

LanguageLess="$(echo "$LANG" | awk -F '.' '{print $1}')"

if [ -f /etc/thunar-image-scripts/Translations/$LanguageLess ]; then
 . /etc/thunar-image-scripts/Translations/$LanguageLess
else
 . /etc/thunar-image-scripts/Translations/en_US
fi

## Set arrays for yad options
Title=( "--title=Scale Image(s)" )
WindowIcon=( "--window-icon=image-x-generic" )
Icon=( "--image=image-x-generic" )

Selection=$(yad "${Title[@]}" "${WindowIcon[@]}" --list --height=350 --no-headers --column="$SELECTONE" --text="$SELECTSCALE" custom 220x176 240x340 320x200 320x240 320x480 352x288 480x320 480x800 480x854 640x350 640x480 640x960 720x400 800x600 1024x768 1152x864 1280x800 1280x1024 1366x768 1400x1050 1440x900 1600x900 1600x1050 1600x1200 1680x1050 1920x1080 1920x1200)

ret="$?"

Selection=$(echo "$Selection" | awk -F '|' '{print $1}')

if [ "$ret" = "1" ]; then
 exit
elif [ "$ret" = "252"]; then
 exit
elif [ "$Selection" = "" ]; then
 yad "${Title[@]}" --window-icon="error" --image="error" --width="350" --wrap --text="$NORESOLUTION\n" --button=$"gtk-quit:1"
 exit 0
fi

## Allow saving files to a different folder

CurrentDirectory="$(pwd)"

Destination=$(yad "${Title[@]}" "${WindowIcon[@]}" --text-align="center" --file-selection --height="450" --width="500" --directory --text="$SCALEFILE\n" --button=$"gtk-quit:3" --button=$"gtk-ok:2")

ret="$?"

if [ "$ret" = "252" ]; then
 exit
elif [ "$ret" = "3" ]; then
 exit
elif [ "$Destination" = "" ]; then
 yad "${Title[@]}" --window-icon="error" --image="error" --width="350" --wrap --text="$NODESTINATION\n" --button=$"gtk-quit:1"
fi

## Check to see if we are overwriting files and prompt the user

if [ "$CurrentDirectory" = "$Destination" ]; then
 yad "${Title[@]}" --window-icon="emblem-important" --image="emblem-important" --wrap --width="350"--text="$AORO" --button=$"gtk-cancel:7" --button=$"$OVERWRITEFILES:3" --button=$"$APPENDBUTTON:5"
 ret="$?"

if [ "$ret" = "252" ]; then
 exit
elif [ "$ret" = "5" ]; then
 Overwrite="False"
elif [ "$ret" = "7" ]; then
 exit
fi

fi

progressbar () {
tail -f /usr/bin/scale-image-ca |  yad "${Title[@]}" "${WindowIcon[@]}" "${Icon[@]}" --width="350" --wrap --no-buttons --progress --pulsate --auto-close --text="$@"
}

if [ "$Selection" = "custom" ]; then
 ScaleTo="$(yad "${WindowIcon[@]}" --entry "${Title[@]}" --width="275" --text="$PLEASEENTER\n")"
 if [ "$?" = "1" ]; then
  exit
 elif [ "$?" = "252" ]; then
  exit
 elif [ "$ScaleTo" = "" ];then
  yad "${Title[@]}" --window-icon="error" --image="error" --text="$NORESOLUTION" --button=$"gtk-quit"
  exit
 fi
else
 ScaleTo=$Selection
fi


progressbar "$SCALING $TO $ScaleTo $NOW\n" &

for i in "$@"; do
 Extension="$(echo "$i" | awk -F "." '{print $NF}')"
 Scaled="$(echo "$i" | sed -e "s|.$Extension||g")"
if [ "$Overwrite" = "False" ];then
 convert "./$i" -scale $ScaleTo'!' "$Destination/$Scaled"$ScaleTo."$Extension"
else
 convert "./$i" -scale $ScaleTo'!' "$Destination/$i"
fi
done

sleep 5

TailPID=$(pgrep -f "tail -f /usr/bin/scale-image-ca")

kill $TailPID

notify-send -u normal -i image-x-generic -t 25000 "
$SCALECOMPLETE"

exit
